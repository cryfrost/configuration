echart-饼图：
<%@ page language="java" contentType="text/html; charset=utf-8"
    pageEncoding="utf-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Insert title here</title>
<script src="js/echarts.js"></script>
<script src="js/jquery.js"></script>
</head>
<body>
		<!-- 为ECharts准备一个具备大小（宽高）的Dom -->
		<div id="main" style="width: 600px;height:400px;margin:200px auto"></div>
		<script type="text/javascript">
			$(document).ready(function(){
				//ajax控制页面加载的时候访问后台，从后台拿到数据给饼状图赋值
				$.ajax({
					url:"pm00003/jsajax.do",//访问后台方法，返回的是一个list集合
					type:'post',
					dataType:"json",//返回的数据类型是json
					success:function(data){
						var arr=data
						var arr1=new Array();//这个数组用来显示左上角的说明
						var arr2=new Array();//这个数组用来控制饼状图各个区域的大小和名字
						for(var i=0;i<arr.length;i++){//遍历返回的集合
							var obj={//创建一个对象用来控制区域的大小和名字，要和原始的饼状图的对应
								value:arr[i].su30001,
								name:arr[i].na10001
							}
							arr1.push(arr[i].na10001);//push()把元素添加到数组中
							arr2.push(obj)
						}					
						// 基于准备好的dom，初始化echarts实例
						var myChart = echarts.init(document.getElementById('main'));		
				    // 指定图表的配置项和数据
						var option = {
							title : {
							text: '某站点用户访问来源',
							subtext: '纯属虚构',
							x:'center'
						},
						tooltip : {
							trigger: 'item',
							formatter: "{a} <br/>{b} : {c} ({d}%)"
						},
						legend: {
							orient : 'vertical',
							x : 'left',
							data:arr1//['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']
									//上面是模板上的数据，我们要给它重新赋值，用arr1里的数据
						},
						toolbox: {
							show : true,
							feature : {
								mark : {show: true},
								dataView : {show: true, readOnly: false},
								magicType : {
									show: true, 
									type: ['pie', 'funnel'],
									option: {
										funnel: {
											x: '25%',
											width: '50%',
											funnelAlign: 'left',
											max: 1548
										}
									}
								},
								restore : {show: true},
								saveAsImage : {show: true}
							}
						},
						calculable : true,
						series : [
							{
								name:'访问来源',
								type:'pie',
								radius : '55%',
								center: ['50%', '60%'],
								data:arr2/* {value:335, name:'直接访问'},
				                {value:310, name:'邮件营销'},
				                {value:234, name:'联盟广告'},
				                {value:135, name:'视频广告'},
				                {value:1548, name:'搜索引擎'}这个是模板上的原始数据，用arr2重新赋值 */
							}
						]
						};		
				    // 使用刚指定的配置项和数据显示图表。
						myChart.setOption(option);
					}					
				})		    	
		})		    
		</script>
	</body>
</html>

controller：
	@ResponseBody()
	@RequestMapping(value = "jsajax", produces = "application/json;charset=utf-8")
	public List<Sales> jsajax() {
		List<Sales> list = pm00003_Service.ajaxSearch();
		return list;
	}
  
serviceImpl：
	@Override
	public List<Sales> ajaxSearch() {
		List<Sales> list = pm0003_Dao.ajaxSearch();
		return list;
	}
  
  
  
public List<Sales> ajaxSearch();


<mapper namespace="dao.PM00003_Dao">

	<select id="ajaxSearch" resultType="entity.Sales">
		select ID10001,SU30001,NA10001 from SALES
	</select>
